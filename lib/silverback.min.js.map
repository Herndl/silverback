{"version":3,"sources":["silverback.min.js","../lib/silverback.min.js"],"names":["silverback","utils","Dictionary","this","_keys","_values","prototype","add","key","value","keyIndex","getIndex","push","remove","removedValue","splice","getValue","testKey","i","len","length","has","values","arValue","forEach","action","breakHere","Signal","_bindings","_prevParams","memorize","_shouldPropagate","active","validateListener","listener","fnName","Error","replace","_registerListener","isOnce","listenerContext","priority","binding","prevIndex","_indexOfListener","SignalBinding","_addBinding","execute","n","context","cur","getListener","addOnce","_destroy","removeAll","getNumListeners","halt","dispatch","paramsArr","_i","arguments","bindings","slice","forget","dispose","toString","VERSION","signal","params","_listener","_isOnce","_signal","handlerReturn","concat","apply","detach","isBound","getSignal","core","Entity","name","_components","componentAdded","componentRemoved","nameCount","component","componentClass","constructor","get","getAll","componentArray","Object","defineProperty","set","scene","_addedToScene","enumerable","configurable","EntityList","entity","head","tail","next","previous","_removeAll","Scene","_entities","entityAdded","entityRemoved","_entityList","_name","addEntity","entityClass","removeEntity","getEntityWithName","entityName","getEntityWithComponent","_component","_componentClass","displayObject","getAllEntity","entityArray","hasEntity","is","type","isPrototypeOf","SceneList","Node","NodeList","nodeAdded","nodeRemoved","node","empty","swap","node1","node2","temp","insertionSort","sortFunction","remains","other","mergeSort","lists","end","start","_merge","head1","head2","NodePool","nodeClass","components","_nodeClass","_tail","newNode","componentName","cache","_cacheTail","releaseCache","Engine","familyClass","ComponentMatchingFamily","_sceneList","_systemList","SystemList","_families","updateComplete","tmpEntities","tmpScenes","tmpSystems","system","_componentAdded","_componentRemoved","nodeObject","family","newEntity","removeAllEntities","addScene","removeScene","removeAllScenes","getScene","componentAddedToEntity","componentRemovedFromEntity","getNodeList","_nodes","nodeList","releaseNodeList","cleanUp","addSystem","addToEngine","getSystem","removeSystem","removeFromEngine","removeAllSystems","update","time","updating","System","engine","_engine","nodeClassPrototype","property","hasOwnProperty","componentObject","types","_nodePool","addIfMatch","removeIfMatch","_releaseNodePoolCache","describe","it","console","info"],"mappings":"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","file":"../lib/silverback.min.js","sourcesContent":[null,"/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var utils;\n    (function (utils) {\n        var Dictionary = (function () {\n            function Dictionary() {\n                this._keys = [];\n                this._values = [];\n            }\n            Dictionary.prototype.add = function (key, value) {\n                var keyIndex = this.getIndex(key);\n                if (keyIndex >= 0) {\n                    this._values[keyIndex] = value;\n                }\n                else {\n                    this._keys.push(key);\n                    this._values.push(value);\n                }\n            };\n            Dictionary.prototype.remove = function (key) {\n                var keyIndex = this.getIndex(key);\n                if (keyIndex >= 0) {\n                    var removedValue = this._values[keyIndex];\n                    this._keys.splice(keyIndex, 1);\n                    this._values.splice(keyIndex, 1);\n                    return removedValue;\n                }\n                else {\n                    throw 'Key does not exist';\n                }\n            };\n            Dictionary.prototype.getValue = function (key) {\n                var value = null;\n                var keyIndex = this.getIndex(key);\n                if (keyIndex >= 0) {\n                    value = this._values[keyIndex];\n                }\n                return value;\n            };\n            Dictionary.prototype.getIndex = function (testKey) {\n                var i = 0, len = this._keys.length, key;\n                for (; i < len; ++i) {\n                    key = this._keys[i];\n                    if (key === testKey) {\n                        return i;\n                    }\n                }\n                return -1;\n            };\n            Dictionary.prototype.has = function (testKey) {\n                var i = 0, len = this._keys.length, key;\n                for (i; i < len; ++i) {\n                    key = this._keys[i];\n                    if (key === testKey) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n            Dictionary.prototype.values = function () {\n                var i = 0, len = this._keys.length, key, value;\n                var arValue = [];\n                for (; i < len; ++i) {\n                    key = this._keys[i];\n                    value = this._values[i];\n                    arValue.push(value);\n                }\n                return arValue;\n            };\n            Dictionary.prototype.forEach = function (action) {\n                var i = 0, len = this._keys.length, key, value;\n                for (; i < len; ++i) {\n                    key = this._keys[i];\n                    value = this._values[i];\n                    var breakHere = action(key, value);\n                    if (breakHere === 'return') {\n                        return false;\n                    }\n                }\n                return true;\n            };\n            return Dictionary;\n        })();\n        utils.Dictionary = Dictionary;\n    })(utils = silverback.utils || (silverback.utils = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var utils;\n    (function (utils) {\n        var Signal = (function () {\n            function Signal() {\n                this._bindings = [];\n                this._prevParams = null;\n                this.memorize = false;\n                this._shouldPropagate = true;\n                this.active = true;\n            }\n            Signal.prototype.validateListener = function (listener, fnName) {\n                if (typeof listener !== 'function') {\n                    throw new Error('listener is a required param of {fn}() and should be a Function.'\n                        .replace('{fn}', fnName));\n                }\n            };\n            Signal.prototype._registerListener = function (listener, isOnce, listenerContext, priority) {\n                var prevIndex = this._indexOfListener(listener, listenerContext);\n                var binding;\n                if (prevIndex !== -1) {\n                    binding = this._bindings[prevIndex];\n                    if (binding.isOnce() !== isOnce) {\n                        throw new Error('You cannot add' + (isOnce ? '' : 'Once') + '() then add' + (!isOnce ? '' : 'Once')\n                            + '() the same listener without removing the relationship first.');\n                    }\n                }\n                else {\n                    binding = new utils.SignalBinding(this, listener, isOnce, listenerContext, priority);\n                    this._addBinding(binding);\n                }\n                if (this.memorize && this._prevParams) {\n                    binding.execute(this._prevParams);\n                }\n                return binding;\n            };\n            Signal.prototype._addBinding = function (binding) {\n                //simplified insertion sort\n                var n = this._bindings.length;\n                do {\n                    --n;\n                } while (this._bindings[n] && binding.priority <= this._bindings[n].priority);\n                this._bindings.splice(n + 1, 0, binding);\n            };\n            Signal.prototype._indexOfListener = function (listener, context) {\n                var n = this._bindings.length;\n                var cur;\n                while (n--) {\n                    cur = this._bindings[n];\n                    if (cur.getListener() === listener && cur.context === context) {\n                        return n;\n                    }\n                }\n                return -1;\n            };\n            Signal.prototype.has = function (listener, context) {\n                if (context === void 0) { context = null; }\n                return this._indexOfListener(listener, context) !== -1;\n            };\n            Signal.prototype.add = function (listener, listenerContext, priority) {\n                if (listenerContext === void 0) { listenerContext = null; }\n                if (priority === void 0) { priority = 0; }\n                this.validateListener(listener, 'add');\n                return this._registerListener(listener, false, listenerContext, priority);\n            };\n            Signal.prototype.addOnce = function (listener, listenerContext, priority) {\n                if (listenerContext === void 0) { listenerContext = null; }\n                if (priority === void 0) { priority = 0; }\n                this.validateListener(listener, 'addOnce');\n                return this._registerListener(listener, true, listenerContext, priority);\n            };\n            Signal.prototype.remove = function (listener, context) {\n                if (context === void 0) { context = null; }\n                this.validateListener(listener, 'remove');\n                var i = this._indexOfListener(listener, context);\n                if (i !== -1) {\n                    this._bindings[i]._destroy();\n                    this._bindings.splice(i, 1);\n                }\n                return listener;\n            };\n            Signal.prototype.removeAll = function () {\n                var n = this._bindings.length;\n                while (n--) {\n                    this._bindings[n]._destroy();\n                }\n                this._bindings.length = 0;\n            };\n            Signal.prototype.getNumListeners = function () {\n                return this._bindings.length;\n            };\n            Signal.prototype.halt = function () {\n                this._shouldPropagate = false;\n            };\n            Signal.prototype.dispatch = function () {\n                var paramsArr = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    paramsArr[_i - 0] = arguments[_i];\n                }\n                if (!this.active) {\n                    return;\n                }\n                var n = this._bindings.length;\n                var bindings;\n                if (this.memorize) {\n                    this._prevParams = paramsArr;\n                }\n                if (!n) {\n                    return;\n                }\n                bindings = this._bindings.slice(0);\n                this._shouldPropagate = true;\n                do {\n                    n--;\n                } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n            };\n            Signal.prototype.forget = function () {\n                this._prevParams = null;\n            };\n            Signal.prototype.dispose = function () {\n                this.removeAll();\n                delete this._bindings;\n                delete this._prevParams;\n            };\n            Signal.prototype.toString = function () {\n                return '[Signal active:' + this.active + ' numListeners:' + this.getNumListeners() + ']';\n            };\n            Signal.VERSION = '1.0.0';\n            return Signal;\n        })();\n        utils.Signal = Signal;\n    })(utils = silverback.utils || (silverback.utils = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var utils;\n    (function (utils) {\n        var SignalBinding = (function () {\n            function SignalBinding(signal, listener, isOnce, listenerContext, priority) {\n                if (priority === void 0) { priority = 0; }\n                this.active = true;\n                this.params = null;\n                this._listener = listener;\n                this._isOnce = isOnce;\n                this.context = listenerContext;\n                this._signal = signal;\n                this.priority = priority || 0;\n            }\n            SignalBinding.prototype.execute = function (paramsArr) {\n                var handlerReturn;\n                var params;\n                if (this.active && !!this._listener) {\n                    params = this.params ? this.params.concat(paramsArr) : paramsArr;\n                    handlerReturn = this._listener.apply(this.context, params);\n                    if (this._isOnce) {\n                        this.detach();\n                    }\n                }\n                return handlerReturn;\n            };\n            SignalBinding.prototype.detach = function () {\n                return this.isBound() ? this._signal.remove(this._listener, this.context) : null;\n            };\n            SignalBinding.prototype.isBound = function () {\n                return (!!this._signal && !!this._listener);\n            };\n            SignalBinding.prototype.isOnce = function () {\n                return this._isOnce;\n            };\n            SignalBinding.prototype.getListener = function () {\n                return this._listener;\n            };\n            SignalBinding.prototype.getSignal = function () {\n                return this._signal;\n            };\n            SignalBinding.prototype._destroy = function () {\n                delete this._signal;\n                delete this._listener;\n                delete this.context;\n            };\n            SignalBinding.prototype.toString = function () {\n                return '[SignalBinding isOnce:' + this._isOnce + ', isBound:' + this.isBound() + ', active:'\n                    + this.active + ']';\n            };\n            return SignalBinding;\n        })();\n        utils.SignalBinding = SignalBinding;\n    })(utils = silverback.utils || (silverback.utils = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var Entity = (function () {\n            function Entity(name) {\n                if (name === void 0) { name = ''; }\n                this._components = new silverback.utils.Dictionary();\n                this.componentAdded = new silverback.utils.Signal();\n                this.componentRemoved = new silverback.utils.Signal();\n                if (name) {\n                    this.name = name;\n                }\n                else {\n                    this.name = '_entity' + (++Entity.nameCount);\n                }\n            }\n            Entity.prototype.add = function (component, componentClass) {\n                if (typeof componentClass === 'undefined') {\n                    componentClass = component.constructor;\n                }\n                if (this._components.has(componentClass)) {\n                    this.remove(componentClass);\n                }\n                this._components.add(componentClass, component);\n                this.componentAdded.dispatch(this, componentClass);\n                return this;\n            };\n            Entity.prototype.remove = function (componentClass) {\n                var component = this._components.getValue(componentClass);\n                if (component) {\n                    this._components.remove(componentClass);\n                    this.componentRemoved.dispatch(this, componentClass);\n                    return component;\n                }\n                return null;\n            };\n            Entity.prototype.get = function (componentClass) {\n                return this._components.getValue(componentClass);\n            };\n            Entity.prototype.getAll = function () {\n                var componentArray = [];\n                this._components.forEach(function (componentClass, component) {\n                    componentArray.push(component);\n                });\n                return componentArray;\n            };\n            Entity.prototype.has = function (componentClass) {\n                return this._components.has(componentClass);\n            };\n            Object.defineProperty(Entity.prototype, \"scene\", {\n                set: function (scene) {\n                    this._addedToScene = scene;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Entity.nameCount = 0;\n            return Entity;\n        })();\n        core.Entity = Entity;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var EntityList = (function () {\n            function EntityList() {\n            }\n            EntityList.prototype.add = function (entity) {\n                if (!this.head) {\n                    this.head = this.tail = entity;\n                    entity.next = entity.previous = null;\n                }\n                else {\n                    this.tail.next = entity;\n                    entity.previous = this.tail;\n                    entity.next = null;\n                    this.tail = entity;\n                }\n            };\n            EntityList.prototype.remove = function (entity) {\n                if (this.head === entity) {\n                    this.head = this.head.next;\n                }\n                if (this.tail === entity) {\n                    this.tail = this.tail.previous;\n                }\n                if (entity.previous) {\n                    entity.previous.next = entity.next;\n                }\n                if (entity.next) {\n                    entity.next.previous = entity.previous;\n                }\n            };\n            EntityList.prototype._removeAll = function () {\n                while (this.head) {\n                    var entity = this.head;\n                    this.head = this.head.next;\n                    entity.previous = null;\n                    entity.next = null;\n                }\n                this.tail = null;\n            };\n            return EntityList;\n        })();\n        core.EntityList = EntityList;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var Scene = (function () {\n            function Scene(name) {\n                if (name === void 0) { name = ''; }\n                this._entities = new silverback.utils.Dictionary();\n                this.entityAdded = new silverback.utils.Signal();\n                this.entityRemoved = new silverback.utils.Signal();\n                this._entityList = new silverback.core.EntityList();\n                if (name) {\n                    this._name = name;\n                }\n                else {\n                    this._name = '_scene' + (++Scene.nameCount);\n                }\n            }\n            Scene.prototype.addEntity = function (entity, entityClass) {\n                if (typeof entityClass === 'undefined') {\n                    entityClass = entity.constructor;\n                }\n                this._entityList.add(entity);\n                this.entityAdded.dispatch(this, entityClass);\n                entity.scene = this;\n                return this;\n            };\n            Scene.prototype.removeEntity = function (entity) {\n                this._entityList.remove(entity);\n            };\n            Scene.prototype.getEntityWithName = function (entityName) {\n                for (var entity = this._entityList.head; entity; entity = entity.next) {\n                    if (entity.name === entityName) {\n                        return entity;\n                    }\n                }\n            };\n            Scene.prototype.getEntityWithComponent = function (_component, _componentClass) {\n                for (var entity = this._entityList.head; entity; entity = entity.next) {\n                    if (entity.has(_componentClass)) {\n                        if (entity.get(_componentClass).displayObject === _component) {\n                            return entity;\n                        }\n                    }\n                }\n                return null;\n            };\n            Scene.prototype.getAllEntity = function () {\n                var entityArray = [];\n                this._entities.forEach(function (entityClass, entity) {\n                    entityArray.push(entity);\n                });\n                return entityArray;\n            };\n            Scene.prototype.hasEntity = function (entityClass) {\n                return this._entities.has(entityClass);\n            };\n            Scene.prototype.is = function (type) {\n                return type.prototype.isPrototypeOf(this);\n            };\n            Scene.nameCount = 0;\n            return Scene;\n        })();\n        core.Scene = Scene;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var SceneList = (function () {\n            function SceneList() {\n            }\n            SceneList.prototype.add = function (scene) {\n                if (!this.head) {\n                    this.head = this.tail = scene;\n                    scene.next = scene.previous = null;\n                }\n                else {\n                    this.tail.next = scene;\n                    scene.previous = this.tail;\n                    scene.next = null;\n                    this.tail = scene;\n                }\n            };\n            SceneList.prototype.remove = function (scene) {\n                if (this.head === scene) {\n                    this.head = this.head.next;\n                }\n                if (this.tail === scene) {\n                    this.tail = this.tail.previous;\n                }\n                if (scene.previous) {\n                    scene.previous.next = scene.next;\n                }\n                if (scene.next) {\n                    scene.next.previous = scene.previous;\n                }\n            };\n            SceneList.prototype._removeAll = function () {\n                while (this.head) {\n                    var scene = this.head;\n                    this.head = this.head.next;\n                    scene.previous = null;\n                    scene.next = null;\n                }\n                this.tail = null;\n            };\n            SceneList.prototype.get = function (type) {\n                for (var scene = this.head; scene; scene = scene.next) {\n                    if (scene.is(type)) {\n                        return scene;\n                    }\n                }\n                return null;\n            };\n            return SceneList;\n        })();\n        core.SceneList = SceneList;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var Node = (function () {\n            function Node() {\n                this.entity = null;\n                this.previous = null;\n                this.next = null;\n            }\n            return Node;\n        })();\n        core.Node = Node;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var NodeList = (function () {\n            function NodeList() {\n                this.head = null;\n                this.tail = null;\n                this.nodeAdded = new silverback.utils.Signal();\n                this.nodeRemoved = new silverback.utils.Signal();\n            }\n            NodeList.prototype.add = function (node) {\n                if (!this.head) {\n                    this.head = this.tail = node;\n                    node.next = node.previous = null;\n                }\n                else {\n                    this.tail.next = node;\n                    node.previous = this.tail;\n                    node.next = null;\n                    this.tail = node;\n                }\n                this.nodeAdded.dispatch(node);\n            };\n            NodeList.prototype.remove = function (node) {\n                if (this.head === node) {\n                    this.head = this.head.next;\n                }\n                if (this.tail === node) {\n                    this.tail = this.tail.previous;\n                }\n                if (node.previous) {\n                    node.previous.next = node.next;\n                }\n                if (node.next) {\n                    node.next.previous = node.previous;\n                }\n                this.nodeRemoved.dispatch(node);\n            };\n            NodeList.prototype.removeAll = function () {\n                while (this.head) {\n                    var node = this.head;\n                    this.head = node.next;\n                    node.previous = null;\n                    node.next = null;\n                    this.nodeRemoved.dispatch(node);\n                }\n                this.tail = null;\n            };\n            NodeList.prototype.empty = function () {\n                return this.head === null;\n            };\n            NodeList.prototype.swap = function (node1, node2) {\n                if (node1.previous === node2) {\n                    node1.previous = node2.previous;\n                    node2.previous = node1;\n                    node2.next = node1.next;\n                    node1.next = node2;\n                }\n                else if (node2.previous === node1) {\n                    node2.previous = node1.previous;\n                    node1.previous = node2;\n                    node1.next = node2.next;\n                    node2.next = node1;\n                }\n                else {\n                    var temp = node1.previous;\n                    node1.previous = node2.previous;\n                    node2.previous = temp;\n                    temp = node1.next;\n                    node1.next = node2.next;\n                    node2.next = temp;\n                }\n                if (this.head === node1) {\n                    this.head = node2;\n                }\n                else if (this.head === node2) {\n                    this.head = node1;\n                }\n                if (this.tail === node1) {\n                    this.tail = node2;\n                }\n                else if (this.tail === node2) {\n                    this.tail = node1;\n                }\n                if (node1.previous) {\n                    node1.previous.next = node1;\n                }\n                if (node2.previous) {\n                    node2.previous.next = node2;\n                }\n                if (node1.next) {\n                    node1.next.previous = node1;\n                }\n                if (node2.next) {\n                    node2.next.previous = node2;\n                }\n            };\n            NodeList.prototype.insertionSort = function (sortFunction) {\n                if (this.head === this.tail) {\n                    return;\n                }\n                var remains = this.head.next;\n                for (var node = remains; node; node = remains) {\n                    remains = node.next;\n                    for (var other = node.previous; other; other = other.previous) {\n                        if (sortFunction(node, other) >= 0) {\n                            if (node !== other.next) {\n                                if (this.tail === node) {\n                                    this.tail = node.previous;\n                                }\n                                node.previous.next = node.next;\n                                if (node.next) {\n                                    node.next.previous = node.previous;\n                                }\n                                node.next = other.next;\n                                node.previous = other;\n                                node.next.previous = node;\n                                other.next = node;\n                            }\n                            break;\n                        }\n                    }\n                    if (!other) {\n                        if (this.tail === node) {\n                            this.tail = node.previous;\n                        }\n                        node.previous.next = node.next;\n                        if (node.next) {\n                            node.next.previous = node.previous;\n                        }\n                        node.next = this.head;\n                        this.head.previous = node;\n                        node.previous = null;\n                        this.head = node;\n                    }\n                }\n            };\n            NodeList.prototype.mergeSort = function (sortFunction) {\n                if (this.head === this.tail) {\n                    return;\n                }\n                var lists;\n                var start = this.head;\n                var end;\n                while (start) {\n                    end = start;\n                    while (end.next && sortFunction(end, end.next) <= 0) {\n                        end = end.next;\n                    }\n                    var next = end.next;\n                    start.previous = end.next = null;\n                    lists.push(start);\n                    start = next;\n                }\n                while (lists.length > 1) {\n                }\n                this.tail = this.head = lists[0];\n                while (this.tail.next) {\n                    this.tail = this.tail.next;\n                }\n            };\n            NodeList.prototype._merge = function (head1, head2, sortFunction) {\n                var node;\n                var head;\n                if (sortFunction(head1, head2) <= 0) {\n                    head = node = head1;\n                    head1 = head1.next;\n                }\n                else {\n                    head = node = head2;\n                    head2 = head2.next;\n                }\n                while (head1 && head2) {\n                    if (sortFunction(head1, head2) <= 0) {\n                        node.next = head1;\n                        head1.previous = node;\n                        node = head1;\n                        head1 = head1.next;\n                    }\n                    else {\n                        node.next = head2;\n                        head2.previous = node;\n                        node = head2;\n                        head2 = head2.next;\n                    }\n                }\n                if (head1) {\n                    node.next = head1;\n                    head1.previous = node;\n                }\n                else {\n                    node.next = head2;\n                    head2.previous = node;\n                }\n                return head;\n            };\n            return NodeList;\n        })();\n        core.NodeList = NodeList;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var NodePool = (function () {\n            function NodePool(nodeClass, components) {\n                this._nodeClass = nodeClass;\n                this._components = components;\n            }\n            NodePool.prototype.get = function () {\n                if (this._tail) {\n                    var node = this._tail;\n                    this._tail = this._tail.previous;\n                    node.previous = null;\n                    return node;\n                }\n                else {\n                    var newNode = new this._nodeClass;\n                    return newNode;\n                }\n            };\n            NodePool.prototype.dispose = function (node) {\n                this._components.forEach(function (componentClass, componentName) {\n                    node[componentName] = null;\n                });\n                node.entity = null;\n                node.next = null;\n                node.previous = this._tail;\n                this._tail = node;\n            };\n            NodePool.prototype.cache = function (node) {\n                node.previous = this._cacheTail;\n                this._cacheTail = node;\n            };\n            NodePool.prototype.releaseCache = function () {\n                while (this._cacheTail) {\n                    var node = this._cacheTail;\n                    this._cacheTail = node.previous;\n                    node.next = null;\n                    node.previous = this._tail;\n                    this._tail = node;\n                }\n            };\n            return NodePool;\n        })();\n        core.NodePool = NodePool;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var Engine = (function () {\n            function Engine() {\n                this.familyClass = core.ComponentMatchingFamily;\n                this._entityList = new core.EntityList();\n                this._sceneList = new core.SceneList();\n                this._systemList = new core.SystemList();\n                this._families = new silverback.utils.Dictionary();\n                this.updateComplete = new silverback.utils.Signal();\n            }\n            Object.defineProperty(Engine.prototype, \"entites\", {\n                get: function () {\n                    var tmpEntities = [];\n                    for (var entity = this._entityList.head; entity; entity = entity.next) {\n                        tmpEntities.push(entity);\n                    }\n                    return tmpEntities;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(Engine.prototype, \"scenes\", {\n                get: function () {\n                    var tmpScenes = [];\n                    for (var scene = this._sceneList.head; scene; scene = scene.next) {\n                        tmpScenes.push(scene);\n                    }\n                    return tmpScenes;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(Engine.prototype, \"systems\", {\n                get: function () {\n                    var tmpSystems = [];\n                    for (var system = this._systemList.head; system; system = system.next) {\n                        tmpSystems.push(system);\n                    }\n                    return tmpSystems;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Engine.prototype.addEntity = function (entity) {\n                this._entityList.add(entity);\n                entity.componentAdded.add(this._componentAdded, this);\n                entity.componentRemoved.add(this._componentRemoved, this);\n                this._families.forEach(function (nodeObject, family) {\n                    family.newEntity(entity);\n                });\n            };\n            Engine.prototype.removeEntity = function (entity) {\n                entity.componentAdded.remove(this._componentAdded, this);\n                entity.componentRemoved.remove(this._componentRemoved, this);\n                this._families.forEach(function (nodeObject, family) {\n                    family.removeEntity(entity);\n                });\n                this._entityList.remove(entity);\n            };\n            Engine.prototype.removeAllEntities = function () {\n                while (this._entityList.head) {\n                    this.removeEntity(this._entityList.head);\n                }\n            };\n            Engine.prototype.addScene = function (scene) {\n                this._sceneList.add(scene);\n            };\n            Engine.prototype.removeScene = function (scene) {\n                /*scene.entityAdded.remove(this._entityAdded, this);\n                scene.entityRemoved.remove(this._entityRemoved, this);*/\n                this._sceneList.remove(scene);\n            };\n            Engine.prototype.removeAllScenes = function () {\n                while (this._sceneList.head) {\n                    this.removeScene(this._sceneList.head);\n                }\n            };\n            Engine.prototype.getScene = function (type) {\n                return this._sceneList.get(type);\n            };\n            Engine.prototype._componentAdded = function (entity, componentClass) {\n                this._families.forEach(function (nodeObject, family) {\n                    family.componentAddedToEntity(entity, componentClass);\n                });\n            };\n            Engine.prototype._componentRemoved = function (entity, componentClass) {\n                this._families.forEach(function (nodeObject, family) {\n                    family.componentRemovedFromEntity(entity, componentClass);\n                });\n            };\n            Engine.prototype.getNodeList = function (nodeClass) {\n                if (this._families.has(nodeClass)) {\n                    return this._families.getValue(nodeClass)._nodes;\n                }\n                var family = new this.familyClass(nodeClass, this);\n                this._families.add(nodeClass, family);\n                for (var entity = this._entityList.head; entity; entity = entity.next) {\n                    family.newEntity(entity);\n                }\n                return family.nodeList;\n            };\n            Engine.prototype.releaseNodeList = function (nodeClass) {\n                if (this._families.has(nodeClass)) {\n                    this._families.getValue(nodeClass).cleanUp();\n                }\n                this._families.remove(nodeClass);\n            };\n            Engine.prototype.addSystem = function (system, priority) {\n                system.priority = priority;\n                system.addToEngine(this);\n                this._systemList.add(system);\n            };\n            Engine.prototype.getSystem = function (type) {\n                return this._systemList.get(type);\n            };\n            Engine.prototype.removeSystem = function (system) {\n                this._systemList.remove(system);\n                system.removeFromEngine(this);\n            };\n            Engine.prototype.removeAllSystems = function () {\n                while (this._systemList.head) {\n                    this.removeSystem(this._systemList.head);\n                }\n            };\n            Engine.prototype.update = function (time) {\n                this.updating = true;\n                for (var system = this._systemList.head; system; system = system.next) {\n                    system.update(time);\n                }\n                this.updating = false;\n                this.updateComplete.dispatch();\n            };\n            return Engine;\n        })();\n        core.Engine = Engine;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var System = (function () {\n            function System() {\n                this.previous = null;\n                this.next = null;\n                this.priority = 0;\n            }\n            System.prototype.addToEngine = function (engine) {\n            };\n            System.prototype.removeFromEngine = function (engine) {\n            };\n            System.prototype.update = function (time) {\n            };\n            System.prototype.is = function (type) {\n                return type.prototype.isPrototypeOf(this);\n            };\n            return System;\n        })();\n        core.System = System;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\nsilverback.core.System.prototype.previous = null;\nsilverback.core.System.prototype.next = null;\nsilverback.core.System.prototype.priority = 0;\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var ComponentMatchingFamily = (function () {\n            function ComponentMatchingFamily(nodeClass, engine) {\n                this._nodeClass = nodeClass;\n                this._engine = engine;\n                this._nodes = new silverback.core.NodeList();\n                this._entities = new silverback.utils.Dictionary();\n                this._components = new silverback.utils.Dictionary();\n                var nodeClassPrototype = this._nodeClass.prototype;\n                for (var property in nodeClassPrototype) {\n                    if (nodeClassPrototype.hasOwnProperty(property) &&\n                        property !== 'types' &&\n                        property !== 'next' &&\n                        property !== 'previous' &&\n                        property !== 'constructor' &&\n                        property !== 'super' &&\n                        property !== 'extend' &&\n                        property !== 'entity') {\n                        var componentObject = nodeClassPrototype.types[property];\n                        this._components.add(componentObject, property);\n                    }\n                }\n                this._nodePool = new silverback.core.NodePool(this._nodeClass, this._components);\n                this._nodePool.dispose(this._nodePool.get());\n            }\n            Object.defineProperty(ComponentMatchingFamily.prototype, \"nodeList\", {\n                get: function () {\n                    return this._nodes;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            ComponentMatchingFamily.prototype.newEntity = function (entity) {\n                this.addIfMatch(entity);\n            };\n            ComponentMatchingFamily.prototype.componentAddedToEntity = function (entity, componentClass) {\n                this.addIfMatch(entity);\n            };\n            ComponentMatchingFamily.prototype.componentRemovedFromEntity = function (entity, componentClass) {\n                if (this._components.has(componentClass)) {\n                    this.removeIfMatch(entity);\n                }\n            };\n            ComponentMatchingFamily.prototype.removeEntity = function (entity) {\n                this.removeIfMatch(entity);\n            };\n            ComponentMatchingFamily.prototype.addIfMatch = function (entity) {\n                if (!this._entities.has(entity)) {\n                    var componentClass;\n                    if (!this._components.forEach(function (componentClass, componentName) {\n                        if (!entity.has(componentClass)) {\n                            return 'return';\n                        }\n                    })) {\n                        return;\n                    }\n                    var node = this._nodePool.get();\n                    node.entity = entity;\n                    this._components.forEach(function (componentClass, componentName) {\n                        node[componentName] = entity.get(componentClass);\n                    });\n                    this._entities.add(entity, node);\n                    entity.componentRemoved.add(this.componentRemovedFromEntity, this);\n                    this._nodes.add(node);\n                }\n            };\n            ComponentMatchingFamily.prototype.removeIfMatch = function (entity) {\n                if (this._entities.getValue(entity)) {\n                    var node = this._entities.getValue(entity);\n                    this._entities.remove(entity);\n                    this._nodes.remove(node);\n                    if (this._engine.updating) {\n                        this._nodePool.cache(node);\n                        this._engine.updateComplete.add(this._releaseNodePoolCache, this);\n                    }\n                    else {\n                        this._nodePool.dispose(node);\n                    }\n                }\n            };\n            ComponentMatchingFamily.prototype._releaseNodePoolCache = function () {\n                this._engine.updateComplete.remove(this._releaseNodePoolCache);\n                this._nodePool.releaseCache();\n            };\n            ComponentMatchingFamily.prototype.cleanUp = function () {\n                for (var node = this._nodes.head; node; node = node.next) {\n                    this._entities.remove(node.entity);\n                }\n                this._nodes.removeAll();\n            };\n            return ComponentMatchingFamily;\n        })();\n        core.ComponentMatchingFamily = ComponentMatchingFamily;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar silverback;\n(function (silverback) {\n    var core;\n    (function (core) {\n        var SystemList = (function () {\n            function SystemList() {\n            }\n            SystemList.prototype.add = function (system) {\n                if (!this.head) {\n                    this.head = this.tail = system;\n                    system.next = system.previous = null;\n                }\n                else {\n                    for (var node = this.tail; node; node = node.previous) {\n                        if (node.priority <= system.priority) {\n                            break;\n                        }\n                    }\n                    if (node === this.tail) {\n                        this.tail.next = system;\n                        system.previous = this.tail;\n                        system.next = null;\n                        this.tail = system;\n                    }\n                    else if (!node) {\n                        system.next = this.head;\n                        system.previous = null;\n                        this.head.previous = system;\n                        this.head = system;\n                    }\n                    else {\n                        system.next = node.next;\n                        system.previous = node;\n                        node.next.previous = system;\n                        node.next = system;\n                    }\n                }\n            };\n            SystemList.prototype.remove = function (system) {\n                if (this.head === system) {\n                    this.head = this.head.next;\n                }\n                if (this.tail === system) {\n                    this.tail = this.tail.previous;\n                }\n                if (system.previous) {\n                    system.previous.next = system.next;\n                }\n                if (system.next) {\n                    system.next.previous = system.previous;\n                }\n            };\n            SystemList.prototype.removeAll = function () {\n                while (this.head) {\n                    var system = this.head;\n                    this.head = this.head.next;\n                    system.previous = null;\n                    system.next = null;\n                }\n                this.tail = null;\n            };\n            SystemList.prototype.get = function (type) {\n                for (var system = this.head; system; system = system.next) {\n                    if (system.is(type)) {\n                        return system;\n                    }\n                }\n                return null;\n            };\n            return SystemList;\n        })();\n        core.SystemList = SystemList;\n    })(core = silverback.core || (silverback.core = {}));\n})(silverback || (silverback = {}));\n/// <reference path=\"../../typings/tsd.d.ts\" />\ndescribe('First test', function () {\n    it('should exit without error', function () {\n        console.info('Here');\n    });\n});\n"],"sourceRoot":"/source/"}